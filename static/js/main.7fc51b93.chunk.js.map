{"version":3,"sources":["components/Button/Button.js","components/NewGameButton/NewGameButton.js","components/NewGameButton/NewGameButtonContainer.js","utils/className.js","components/Cell/Cell.js","components/Board/Board.js","components/InsertModeIcon/InsertModeIcon.js","components/Controls/Controls.js","components/Controls/ControlsContainer.js","components/App/App.js","utils/saveBoard.js","state/sudokuReducer.js","state/handleSetBoardAction.js","state/handleSelectCellAction.js","state/handleToggleWriteModeAction.js","state/handleToggleValueAction.js","utils/highlightSimilarValues.js","utils/highlightBoardErrors.js","utils/createValidationZones.js","utils/prng.js","utils/generatePuzzle.js","hooks/useGameState.js","serviceWorker.js","index.js","components/App/AppContainer.js"],"names":["Button","className","children","props","NewGameButton","isNewGameModalOpen","openNewGameModal","closeNewGameModal","newGame","onClick","NewGameButtonContainer","useState","setIsNewGameModalOpen","difficultyIndex","seed","window","confirm","classNames","Object","entries","reduce","join","Cell","x","y","value","isReadOnly","isError","isHighlighted","candidates","selectedCell","selectCell","data-x","data-y","filter","map","candidate","key","style","gridArea","data-cx","Math","floor","parseInt","data-cy","Board","board","row","cell","InsertModeIcon","isInsertingValue","Controls","toggleWriteMode","toggleValue","Array","from","length","_","v","isActive","ControlsContainer","useEffect","handleKeyPress","e","preventDefault","stopPropagation","document","addEventListener","removeEventListener","App","saveBoard","localStorage","setItem","JSON","stringify","SET_BOARD_ACTION","SELECT_CELL_ACTION","TOGGLE_WRITE_MODE_ACTION","TOGGLE_VALUE_ACTION","initialSudokuState","actionHandlers","state","currentSelectedCell","oldBoard","sudokuReducer","action","hasOwnProperty","type","call","highlightSimilarValues","currentBoard","targetValue","parse","validationZones","j","horz","vert","k","push","sq","createValidationZones","highlightBoardErrors","forEach","validationZone","values","duplicateValues","indexOf","lastIndexOf","MAX_PRNG_VALUE","createPRNGGenerator","previousValue","this","difficulties","generatePuzzle","originalMathRandom","random","puzzle","getSudoku","useGameState","useReducer","dispatch","setBoard","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","savedBoard","getItem","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7fc51b93.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Button.css\";\n\nexport function Button({className, children, ...props}) {\n  return (\n    <button\n      className={`Button ${className || \"\"}`}\n      {...props}\n    >{children}</button>\n  )\n}\n","import React from \"react\";\n\nimport { Button } from \"../Button/Button\";\n\nimport \"./NewGameButton.css\";\n\nexport function NewGameButton({\n  isNewGameModalOpen,\n  openNewGameModal,\n  closeNewGameModal,\n  newGame\n}) {\n  return (\n    <div className=\"NewGameButton\">\n      <Button\n        className=\"NewGameButton__btn\"\n        onClick={openNewGameModal}\n      >New Game &#x25BE;</Button>\n      \n      {isNewGameModalOpen && (\n        <div\n          className=\"NewGameButton__backdrop\"\n          onClick={closeNewGameModal}\n        ></div>\n      )}\n\n      {isNewGameModalOpen && (\n        <div className=\"NewGameButton__menu\">\n          <Button onClick={() => newGame(0)}>Very Easy</Button>\n          <Button onClick={() => newGame(1)}>Easy</Button>\n          <Button onClick={() => newGame(2)}>Medium</Button>\n          <Button onClick={() => newGame(3)}>Hard</Button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { NewGameButton } from \"./NewGameButton\";\n\nexport function NewGameButtonContainer({ newGame }) {\n  const [ isNewGameModalOpen, setIsNewGameModalOpen ] = useState(false);\n\n  function openNewGameModal() {\n    setIsNewGameModalOpen(true);\n  }\n\n  function closeNewGameModal() {\n    setIsNewGameModalOpen(false);\n  }\n\n  function newGameAndCloseModal(difficultyIndex, seed) {\n    if (!window.confirm(\"Are you sure?\")) {\n      return;\n    }\n\n    newGame(difficultyIndex, seed);\n    closeNewGameModal();\n  }\n\n  return (\n    <NewGameButton\n      isNewGameModalOpen={isNewGameModalOpen}\n      openNewGameModal={openNewGameModal}\n      closeNewGameModal={closeNewGameModal}\n      newGame={newGameAndCloseModal}\n    />\n  );\n}\n","export function className(classNames) {\n  return Object.entries(classNames)\n    .reduce(\n      (classNames, [className, enabled]) => {\n        if (!enabled) {\n          return classNames;\n        }\n\n        return [\n          ...classNames,\n          className\n        ];\n      }, \n      []\n    )\n    .join(\" \");\n}\n","import React from \"react\";\nimport \"./Cell.css\";\nimport { className } from \"../../utils/className\";\n\nexport function Cell({\n  x,\n  y,\n  value,\n  isReadOnly,\n  isError,\n  isHighlighted,\n  candidates,\n  selectedCell,\n\n  selectCell\n}) {\n  return (\n    <div\n      className={className({\n        \"Cell\": true,\n        \"Cell--isSelected\": selectedCell && selectedCell.x === x && selectedCell.y === y,\n        \"Cell--isHighlighted\": isHighlighted,\n      })}\n      data-x={x}\n      data-y={y}\n      onClick={selectCell}\n    >\n      {\n        !!value ?\n          (\n            <div\n              className={className({\n                \"Cell__value\": true,\n                \"Cell__value--isReadOnly\": isReadOnly,\n                \"Cell__value--isError\": isError,\n              })}\n            >{value}</div>\n          ) :\n          (\n            Object.entries(candidates)\n              .filter(([ _candidate, enabled ]) => !!enabled)\n              .map(([ candidate ]) => candidate)\n              .map(candidate => (\n                <div\n                  key={candidate}\n                  className=\"Cell__candidate\"\n                  style={{gridArea: `_${candidate}`}}\n                  data-cx={Math.floor((parseInt(candidate) - 1) % 3)}\n                  data-cy={Math.floor((parseInt(candidate) - 1) / 3)}\n                >{candidate}</div>\n              ))\n          )\n      }\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./Board.css\";\nimport { Cell } from \"../Cell/Cell\";\n\nexport function Board({ board, selectedCell, selectCell }) {\n  if (!board) {\n    return null;\n  }\n\n  return (\n    <div className=\"Board\">\n      {board.map(\n        (row, y) => row.map(\n          (cell, x) => {\n            const { value, candidates, isReadOnly, isError, isHighlighted } = cell;\n            \n            return (\n              <Cell\n                key={`${x},${y}`}\n\n                x={x}\n                y={y}\n                value={value}\n                candidates={candidates}\n                isReadOnly={isReadOnly}\n                isError={isError}\n                isHighlighted={isHighlighted}\n                selectedCell={selectedCell}\n\n                selectCell={() => selectCell({ x, y })}\n              />\n            )\n          }\n        )\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { className } from \"../../utils/className\";\nimport \"./InsertModeIcon.css\";\n\nexport function InsertModeIcon({ isInsertingValue }) {\n  return (\n    <span\n      className={className({\n        \"InsertModeIcon\": true,\n        \"InsertModeIcon--candidate\": !isInsertingValue,\n        \"InsertModeIcon--value\": isInsertingValue\n      })}\n    >&nbsp;</span>\n  );\n}\n","import React from \"react\";\n\nimport { Button } from \"../Button/Button\";\nimport { InsertModeIcon } from \"../InsertModeIcon/InsertModeIcon\";\n\nimport { className } from \"../../utils/className\";\n\nimport \"./Controls.css\";\n\nexport function Controls({ selectedCell, isInsertingValue, toggleWriteMode, toggleValue }) {\n  return (\n    <div className=\"Controls\">\n      {Array.from({ length: 9 }, (_, v) => {\n        const isActive = (\n          selectedCell &&\n          !selectedCell.isReadOnly &&\n          (\n            (!isInsertingValue && selectedCell.candidates[v + 1 + \"\"]) ||\n            (isInsertingValue && selectedCell.value === v + 1 + \"\")\n          )\n        );\n\n        return (\n          <Button\n            key={v}\n            onClick={() => toggleValue(v + 1 + \"\")}\n            className={className({\n              \"Button--isActive\": isActive,\n              \"Button--isDisabled\": selectedCell && selectedCell.isReadOnly\n            })}\n          >{v + 1}</Button>\n        );\n      })}\n\n      <Button\n        onClick={() => toggleWriteMode()}\n      ><InsertModeIcon isInsertingValue={isInsertingValue} /></Button>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Controls } from \"./Controls\";\n\nexport function ControlsContainer({\n  selectedCell,\n  isInsertingValue,\n  toggleWriteMode,\n  toggleValue\n}) {\n  useEffect(() => {\n    function handleKeyPress(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const { key } = e;\n\n      if (key === \" \") {\n        toggleWriteMode();\n        return;\n      }\n\n      if (key < \"1\" || key > \"9\") {\n        return;\n      }\n\n      toggleValue(key);\n    }\n\n    window.document.addEventListener(\"keypress\", handleKeyPress);\n\n    return () => {\n      window.document.removeEventListener(\"keypress\", handleKeyPress);\n    };\n  }, []);\n\n  return (\n    <Controls \n      selectedCell={selectedCell}\n      isInsertingValue={isInsertingValue}\n      toggleWriteMode={toggleWriteMode}\n      toggleValue={toggleValue}\n    />\n  )\n}\n","import React from \"react\";\n\nimport { NewGameButtonContainer } from \"../NewGameButton/NewGameButtonContainer\";\nimport { Board } from \"../Board/Board\";\nimport { ControlsContainer } from \"../Controls/ControlsContainer\";\n\nimport \"./App.css\";\n\nexport function App({\n  selectCell,\n  toggleWriteMode,\n  toggleValue,\n  newGame,\n\n  board,\n  selectedCell,\n  isInsertingValue\n}) {\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <h1 className=\"App__title\">Sudoku</h1>\n        <div className=\"App__newGameContainer\">\n          <NewGameButtonContainer newGame={newGame} />\n        </div>\n      </header>\n\n      <Board board={board} selectedCell={selectedCell} selectCell={selectCell} />\n      \n      <ControlsContainer\n        selectedCell={selectedCell && board[selectedCell.y][selectedCell.x]}\n        isInsertingValue={isInsertingValue}\n        toggleWriteMode={toggleWriteMode}\n        toggleValue={toggleValue}\n      />\n    </div>\n  );\n}\n","export function saveBoard(board) {\n  if (!board) {\n    return;\n  }\n\n  window.localStorage.setItem(\"sudoku\", JSON.stringify(board));\n}\n","import { handleSetBoardAction } from \"./handleSetBoardAction\";\nimport { handleSelectCellAction } from \"./handleSelectCellAction\";\nimport { handleToggleWriteModeAction } from \"./handleToggleWriteModeAction\";\nimport { handleToggleValueAction } from \"./handleToggleValueAction\";\n\nexport const SET_BOARD_ACTION = \"SET_BOARD\";\nexport const SELECT_CELL_ACTION = \"SELECT_CELL\";\nexport const TOGGLE_WRITE_MODE_ACTION = \"TOGGLE_WRITE_MODE\";\nexport const TOGGLE_VALUE_ACTION = \"TOGGLE_VALUE\";\n\nexport const initialSudokuState = {\n  isInsertingValue: true,\n  selectedCell: null,\n  board: null\n};\n\nconst actionHandlers = {\n  [SET_BOARD_ACTION]: handleSetBoardAction,\n  [SELECT_CELL_ACTION]: handleSelectCellAction,\n  [TOGGLE_WRITE_MODE_ACTION]: handleToggleWriteModeAction,\n  [TOGGLE_VALUE_ACTION]: handleToggleValueAction,\n};\n\nexport function sudokuReducer(state, action) {\n  if (actionHandlers.hasOwnProperty(action.type)) {\n    return actionHandlers[action.type].call(null, state, action);\n  }\n\n  return state;\n}\n","import { saveBoard } from \"../utils/saveBoard\";\n\nexport function handleSetBoardAction(state, { board }) {\n  saveBoard(board);\n\n  return {\n    ...state,\n    board\n  };\n}\n","export function handleSelectCellAction(state, { selectedCell }) {\n  const { selectedCell: currentSelectedCell } = state;\n\n  if (\n    currentSelectedCell &&\n    currentSelectedCell.x === selectedCell.x &&\n    currentSelectedCell.y === selectedCell.y\n  ) {\n    return {\n      ...state,\n      selectedCell: null\n    };\n  }\n  \n  return {\n    ...state,\n    selectedCell\n  };\n}\n","export function handleToggleWriteModeAction({ isInsertingValue, ...state }) {\n  return {\n    ...state,\n    isInsertingValue: !isInsertingValue\n  };\n}\n","import { saveBoard } from \"../utils/saveBoard\";\n\nexport function handleToggleValueAction(state, { value }) {\n  const { isInsertingValue, selectedCell, board: oldBoard } = state;\n\n  if (!selectedCell || !oldBoard) {\n    return state;\n  }\n\n  const { x, y } = selectedCell;\n  const board = [...oldBoard];\n\n  if (board[y][x].isReadOnly === true) {\n    return state;\n  }\n\n  if (isInsertingValue) {\n    if (board[y][x].value === value) {\n      board[y][x].value = null;\n    } else {\n      board[y][x].value = value;\n    }\n  } else {\n    board[y][x].candidates[value] = !board[y][x].candidates[value];\n  }\n\n  saveBoard(board);\n  \n  return {\n    ...state,\n    board\n  };\n}\n","export function highlightSimilarValues(currentBoard, selectedCell) {\n  if (!currentBoard || !selectedCell) {\n    return currentBoard;\n  }\n\n  const targetValue = currentBoard[selectedCell.y][selectedCell.x].value;\n\n  if (!targetValue) {\n    return currentBoard;\n  }\n\n  const board = JSON.parse(JSON.stringify(currentBoard));\n\n  for (let y = 0; y < 9; y += 1) {\n    for (let x = 0; x < 9; x += 1) {\n      const currentValue = board[y][x].value;\n\n      if (currentValue === targetValue && (x !== selectedCell.x || y !== selectedCell.y)) {\n        board[y][x].isHighlighted = true;\n      }\n    }\n  }\n\n  return board;\n}","import { createValidationZones } from \"./createValidationZones\";\nconst validationZones = createValidationZones();\n\nexport function highlightBoardErrors(currentBoard) {\n  if (!currentBoard) {\n    return currentBoard;\n  }\n\n  const board = JSON.parse(JSON.stringify(currentBoard));\n\n  validationZones.forEach(validationZone => {\n    const values = validationZone\n      .map(({ x, y }) => board[y][x].value)\n      .filter(value => !!value);\n\n    const duplicateValues = values.reduce(\n      (duplicateValues, value) => {\n        const hasDuplicates = values.indexOf(value) !== values.lastIndexOf(value);\n\n        if (hasDuplicates && duplicateValues.indexOf(value) < 0) {\n          return [\n            ...duplicateValues,\n            value\n          ];\n        }\n\n        return duplicateValues;\n      },\n      []\n    );\n\n    if (duplicateValues.length === 0) {\n      return;\n    }\n\n    validationZone.forEach(({ x, y }) => {\n      if (duplicateValues.indexOf(board[y][x].value) >= 0) {\n        board[y][x].isError = true;\n      }\n    });\n  });\n  \n  return board;\n}\n","export function createValidationZones() {\n  const validationZones = [];\n\n  for (let j = 0; j < 9; j += 1) {\n    const horz = [];\n    const vert = [];\n\n    for (let k = 0; k < 9; k += 1) {\n      horz.push({ x: j, y: k });\n      vert.push({ x: k, y: j });\n    }\n\n    validationZones.push(horz);\n    validationZones.push(vert);\n  }\n\n  for (let j = 0; j < 9; j += 3) {\n    for (let k = 0; k < 9; k += 3) {\n      const sq = [];\n\n      for (let y = 0; y < 3; y += 1) {\n        for (let x = 0; x < 3; x += 1) {\n          sq.push({ x: k + x, y: j + y });\n        }\n      }\n\n      validationZones.push(sq);\n    }\n  }\n\n  return validationZones;\n};\n","export const MAX_PRNG_VALUE = 2147483646;\n\n// Park-Miller PRNG\nfunction nextPRNG(previousValue) {\n  const positivePreviousValue = previousValue <= 0 ? previousValue + MAX_PRNG_VALUE : previousValue;\n  return (positivePreviousValue * 16807) % 2147483647;\n}\n\nexport function createPRNGGenerator(seed) {\n  return function() {\n    this.previousValue = this.previousValue || seed;\n\n    const next = nextPRNG(seed);\n    return next / MAX_PRNG_VALUE;\n  };\n}\n","import { getSudoku } from \"fake-sudoku-puzzle-generator\";\nimport { createPRNGGenerator } from \"./prng\";\n\nconst difficulties = [\n  \"VeryEasy\",\n  \"Easy\",\n  \"Medium\",\n  \"Hard\"\n]\n\nexport function generatePuzzle(difficultyIndex, seed) {\n  const originalMathRandom = Math.random;\n  Math.random = createPRNGGenerator(seed);\n\n  const puzzle = getSudoku(difficulties[difficultyIndex]);\n  \n  Math.random = originalMathRandom;\n\n  return puzzle.map(\n    row => row.map(value => ({\n      value: !value ? null : `${value}`,\n      candidates: {\n        \"1\": false,\n        \"2\": false,\n        \"3\": false,\n        \"4\": false,\n        \"5\": false,\n        \"6\": false,\n        \"7\": false,\n        \"8\": false,\n        \"9\": false,\n      },\n      isReadOnly: value !== null,\n    }))\n  );\n}","import { useReducer } from \"react\";\nimport {\n  sudokuReducer,\n  initialSudokuState,\n  TOGGLE_WRITE_MODE_ACTION,\n  SET_BOARD_ACTION,\n  SELECT_CELL_ACTION,\n  TOGGLE_VALUE_ACTION \n} from \"../state/sudokuReducer\";\n\nimport { highlightSimilarValues } from \"../utils/highlightSimilarValues\";\nimport { highlightBoardErrors } from \"../utils/highlightBoardErrors\";\nimport { generatePuzzle } from \"../utils/generatePuzzle\";\n\nexport function useGameState() {\n  const [ { board, selectedCell, ...state }, dispatch ] = useReducer(sudokuReducer, initialSudokuState);\n\n  return {\n    ...state,\n    selectedCell,\n    board: highlightBoardErrors(highlightSimilarValues(board, selectedCell)),\n\n    toggleWriteMode() {\n      dispatch({ type: TOGGLE_WRITE_MODE_ACTION });\n    },\n\n    setBoard(board) {\n      dispatch({ type: SET_BOARD_ACTION, board });\n    },\n\n    newGame(difficultyIndex, seed = Math.random() * 100000000) {\n      dispatch({\n        type: SET_BOARD_ACTION,\n        board: generatePuzzle(difficultyIndex, seed)\n      });\n    },\n\n    selectCell(selectedCell) {\n      dispatch({ type: SELECT_CELL_ACTION, selectedCell });\n    },\n\n    toggleValue(value) {\n      dispatch({ type: TOGGLE_VALUE_ACTION, value });\n    },\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { AppContainer } from './components/App/AppContainer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, { useEffect } from \"react\";\n\nimport { App } from \"./App\";\n\nimport { useGameState } from \"../../hooks/useGameState\";\n\nexport function AppContainer() {\n  const {\n    newGame,\n    setBoard,\n    selectCell,\n    toggleWriteMode,\n    toggleValue,\n\n    board,\n    selectedCell,\n    isInsertingValue\n  } = useGameState();\n\n  useEffect(() => {\n    const savedBoard = window.localStorage.getItem(\"sudoku\");\n    if (savedBoard) {\n      setBoard(JSON.parse(savedBoard));\n      return;\n    }\n\n    newGame(0);\n  }, []);\n\n  return (\n    <App\n      board={board}\n      selectedCell={selectedCell}\n      isInsertingValue={isInsertingValue}\n      selectCell={selectCell}\n      toggleWriteMode={toggleWriteMode}\n      toggleValue={toggleValue}\n      newGame={newGame}\n    />\n  );\n}\n"],"sourceRoot":""}